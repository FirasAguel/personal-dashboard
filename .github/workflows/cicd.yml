name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feat/*
      - test/*
      - dockerize
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Install pnpm
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # Verify pnpm installation
      - name: Verify pnpm
        run: pnpm --version

      # Step 4: Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Step 5: Run Prettier
      - name: Run Prettier
        run: pnpm prettier --check .

      # Step 6: Run ESLint
      - name: Run ESLint
        run: pnpm eslint .

      # Step 7: Run Jest tests
      - name: Run Jest tests
        run: pnpm test

  build-and-deploy:
    runs-on: ubuntu-24.04
    needs: lint-and-test

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/personal-dashboard:latest .
          docker push ghcr.io/${{ github.repository_owner }}/personal-dashboard:latest

      # Step 4: Deploy to VPS
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker pull ghcr.io/${{ github.repository_owner }}/personal-dashboard:latest
            docker stop personal-dashboard || true
            docker rm personal-dashboard || true
            docker run -d --name personal-dashboard -p 3000:3000 ghcr.io/${{ github.repository_owner }}/personal-dashboard:latest
